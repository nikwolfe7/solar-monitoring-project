[http://code.google.com/p/solar-monitoring-project/ Back to Main Page]

== Strategies for Implementation ==

This page is a general recording of various issues and divergent paths that arise in the process of deciding how to ultimately implement this project. The discussions are listed here in no particular order. If something becomes enough of an issue, I'll make a dedicated wiki page for it.

=== Topics On This Page ===

  [W#hardware]
 
----

==[#hardware What Hardware to Use?]==

As [Requirements required] by my specifications, the hardware component of this system needs to be designed with parts that are essentially generic. I do not intend to use any functionality that can only be obtained through the use of a specific microprocessor and I want this project to be replicable anywhere in the world.

===Open-Source Hardware===

The Italian hardware company [http://www.arduino.cc/ Arduino] designs microprocessor boards and provides complete part listings and schematic documentation. As stated on their website:

  _"Arduino is an open-source electronics prototyping platform based on flexible, easy-to-use hardware and software. It's intended for artists, designers, hobbyists, and anyone interested in creating interactive objects or environments."_ 

This is a pretty excellent fit for this project, and that is why I have purchased an Arduino [http://arduino.cc/en/Main/ArduinoBoardDuemilanove Duemilanove].

<img src="http://arduino.cc/en/uploads/Main/ArduinoDuemilanove.jpg" alt="Arduino Duemilanove" />

I really like this board. The open-source IDE they provide is incredibly easy to use, and is based on the [http://processing.org/reference/ Processing] language. I was able to get this thing to play a song through a Piezo speaker within 30 minutes of opening the box. Furthermore, the price is right. This gem only costs $30 assembled, and would be much less if you ordered the parts and [http://arduino.cc/en/uploads/Main/arduino-duemilanove-schematic.pdf built] it yourself. The processor, for instance, an [http://www.sparkfun.com/commerce/product_info.php?products_id=9217 ATmega328], is a whopping $5 bucks online from [http://www.sparkfun.com/commerce/categories.php Sparkfun].

===Hack a Phone vs. Use GSM Chip===

GSM chips are $100 bucks flat, and are only really sold by themselves without a phone by [http://www.telit.com/ Telit]. This violates the [Requirements requirement] that I design this system without using any company-specific or non-generic hardware. I have opted instead to buy a disposable cell phone for $15 and hack it. Details to follow... 

----

==Discussion: Push or Pull==

There are actually two different ways to accomplish the task of initializing the data transfer from the solar array site to the remote server. 

===Push Model===

The idea of a "push" in this case is the initialization of a data transfer from the solar site itself. The microcontroller interfacing with the solar controller will, at a time of its own choosing, call up the server and complete a data transfer. In this case the remote server simply "waits" for the solar site to send it data. 

*Advantages:* If an emergency triggers an event at the site, system overseers can be notified immediately. It might be easier to minimize power usage if the decision of when to transmit data is in the hands of the transmitter.

*Disadvantages:* Because there is no phone number for an IP address, a cellular transmitter would need to call a modem with a phone number that would then deposit the information on the server. This requires another piece of hardware, and that we have physical access to the server. This violates the [Requirements requirement] that the software system be able to run anywhere. It's also more expensive and completely unnecessary given the fact that VoIP services can call cell phones directly with just an internet connection from the perspective of the client. The exchange between the ISP and the cellular network is for all intensive purposes hidden from the client in this case. 

The disadvantages of the pull system are a deal-breaker, in my opinion.

===Pull Model===

The idea of a "pull" model in this case is the initialization of a data transfer from the remote server. The server would initiate a call to the solar site at predefined intervals and "ask" for information. In this case, the hardware component simply waits to be called. 

*Advantages:* The remote server will simply use VoIP services to call the transmitter, and so no further hardware beyond what is contained at the solar site is required. Inquiries can also be initiated at will in this case. 

*Disadvantages:* We need to pay for VoIP services. (Of course, paying for a modem to listen for data requires another cellular account for the SIM card/phone number so this is not exactly a drawback, other than the fact that communication costs money.) Also, we will not know about failures until we initiate a data transfer and get a response from the site. This can lead to lapses during which time solar battery depletion can occur. 

I think the pull model wins on the merits that it is cheaper and allows us to run the software for this system anywhere, as called for by the [Requirements requirements] of this project.

===Final Decision===

Pull Model.

----